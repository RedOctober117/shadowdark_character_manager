-- Items that won't change: make enum and put id & name in single table
-- Items that can change: id in one table, name in another
DROP TABLE IF EXISTS stats_enum;
DROP TABLE IF EXISTS stats_enum;
DROP TABLE IF EXISTS player_stats;
CREATE TABLE stats_enum (ID INTEGER PRIMARY KEY, stat VARCHAR(15) UNIQUE);
CREATE TABLE class;
-- START ANECSTRY
-- use default values to make a column reference stat modifiers
CREATE TABLE ancestry (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(255) UNIQUE,
);
CREATE TABLE languages (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(255) UNIQUE,
);
CREATE TABLE ancestry_known_language (
    ancestry_id INTEGER,
    language_id INTEGER,
    FOREIGN KEY (ancestry_id) REFERENCES ancestry(ID),
    FOREIGN KEY (language_id) REFERENCES languages(ID),
    CONSTRAINT composite_key PRIMARY KEY (ancestry_id, language_id),
);
CREATE TABLE ancestry_talent (
    ancestry_id INTEGER,
    talent_id INTEGER,
    FOREIGN KEY (ancestry_id) REFERENCES ancestry(ID),
    FOREIGN KEY (talent_id) REFERENCES talent(ID),
    CONSTRAINT composite_key REFERENCES (ancestry_id, talent_id),
);
CREATE TABLE ancestry_description (
    ancestry_id INTEGER PRIMARY KEY,
    description VARCHAR(5000),
    FOREIGN KEY (ancestry_id) REFERENCES ancestry(ID),
);
-- END ANCESTRY
-- START TALENT
CREATE TABLE talent (ID INTEGER PRIMARY KEY AUTOINCREMENT);
CREATE TABLE talent_stat_modifier (
    talent_id INTEGER,
    stat_id INTEGER,
    value
);
CREATE TABLE talent_hp_modifier (
    talent_id INTEGER FK,
    player_id INTEGER FK,
    modifier INTEGER,
);
CREATE TABLE talent_attack_modifier (
    talent_id INTEGER FK,
    player_id INTEGER FK,
    modifier INTEGER
);
CREATE TABLE talent_damage_modifier (
    talent_id INTEGER FK,
    player_id INTEGER FK,
    modifier INTEGER,
);
CREATE TABLE talent_ac_modifier (
    talent_id INTEGER FK,
    player_id INTEGER FK,
    modifier INTEGER,
);
CREATE TABLE talent_ability_modifier (
    talent_id INTEGER FK,
    player_id INTEGER FK,
    ability_id INTEGER FK,
    modifier ? ? ? ?
);
-- END TALENT
CREATE TABLE ancestry;
CREATE TABLE background;
CREATE TABLE title;
CREATE TABLE alignment;
CREATE TABLE deity;
-- FINAL
CREATE TABLE player_stats (
    player_id INTEGER,
    stat_id INTEGER,
    value INTEGER,
    CONSTRAINT composite_key PRIMARY KEY (player_id, stat_id)
);
CREATE TABLE player (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    player_name VARCHAR(255)
);
CREATE TABLE stat_modifier (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    player_id INTEGER,
    stat_id INTEGER,
    modifier INTEGER,
    FOREIGN KEY (player_id) REFERENCES player(ID),
    FOREIGN KEY (stat_id) REFERENCES stats_enum(ID),
);
CREATE TABLE stat_modifiers (
    player_id INTEGER,
    modifier_id INTEGER,
    FOREIGN KEY (player_id) REFERENCES player(ID),
    FOREIGN KEY (modifier_id) REFERENCES stat_modifier(ID),
);
INSERT INTO stats_enum (stat)
VALUES ('Strength'),
    ('Dexterity'),
    ('Constitution'),
    ('Intelligence'),
    ('Wisdom'),
    ('Charisma');